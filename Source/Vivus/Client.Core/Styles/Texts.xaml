<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachedProperties="clr-namespace:Vivus.Client.Core.AttachedProperties"
                    xmlns:valueConverters="clr-namespace:Vivus.Client.Core.ValueConverters">

    <!-- Custom style for the email textbox on the login page -->
    <Style x:Key="EmailTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="42" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14.7" />
        <Setter Property="FontFamily" Value="{StaticResource SFProDisplay-Light}" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock x:Name="PlaceHolderText"
                                   IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="#888888"
                                   Margin="{TemplateBinding Margin}"
                                   Padding="{TemplateBinding Padding}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="FontSize" Value="14" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom style for the passwordbox on the login page -->
    <Style x:Key="PasswordTextBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="42" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="PasswordChar" Value="*" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{StaticResource SFProDisplay-Light}" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="attachedProperties:MonitorPasswordProperty.Value" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock x:Name="PlaceHolderText"
                                   IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="#888"
                                   Margin="{TemplateBinding Margin}"
                                   Padding="{TemplateBinding Padding}"
                                   Visibility="{TemplateBinding attachedProperties:HasTextProperty.Value, Converter={valueConverters:BoolToVisibilityConverter}}" />

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom style for the passwordbox -->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="#fff" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#ced4da" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8.5 0" />
        <Setter Property="FontSize" Value="14.7" />
        <Setter Property="Height" Value="38" />
        <Setter Property="PasswordChar" Value="*" />
        <Setter Property="attachedProperties:PasswordBoxExtensions.IsDirtyEnabled" Value="True" />
        <Setter Property="attachedProperties:PasswordBoxExtensions.ShowErrorTemplate" Value="False" />

        <Setter Property="FontFamily" Value="{StaticResource SFProDisplay-Light}" />
        <Setter Property="attachedProperties:MonitorPasswordProperty.Value" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" />
                        </Border>
                        <TextBlock x:Name="PlaceHolderText"
                                   IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="#888"
                                   Padding="{TemplateBinding Padding}"
                                   Visibility="{TemplateBinding attachedProperties:HasTextProperty.Value, Converter={valueConverters:BoolToVisibilityConverter}}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF569DE5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True" />
                                <Condition Property="attachedProperties:PasswordBoxExtensions.ShowErrorTemplate" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                            <!--<Setter TargetName="Block" Property="Text" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent, Mode=TwoWay}" />-->
                            <Setter TargetName="Border" Property="BorderBrush" Value="#f11111"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    </Style>

    <Style x:Key="SpinningText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome-Solid}" />
        <Setter Property="Text" Value="&#xf110;" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform />
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                 From="0"
                                 To="360"
                                 Duration="0:0:1.5"
                                 RepeatBehavior="Forever" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PagePopup" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{Binding PopupType, Converter={valueConverters:PopupTypeToBrushConverter}}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="{StaticResource SFProDisplay-Light}" />
        <Setter Property="FontSize" Value="14.6" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Visibility" Value="{Binding ShowPopup, Converter={valueConverters:BoolToVisibilityConverter}, ConverterParameter=True}" />
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="Margin" Value="0 5 0 0" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="6" Margin="{TemplateBinding Margin}" SnapsToDevicePixels="True">
                        <TextBlock Text="{TemplateBinding Text}" Padding="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowPopup}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:.08" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:5.3" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                From="0 2 0 0"
                                                To="0 5 0 0"
                                                Duration="0:0:.08" />
                            <DoubleAnimation Storyboard.TargetProperty="FontSize"
                                             From="12"
                                             To="14.6"
                                             Duration="0:0:.078" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>